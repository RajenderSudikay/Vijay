@model MedProSC.Feature.ManualForms.Models.BuilderTable

@if (Model != null)
{
    <table id="loadtable" class="table table-bordered table-lg mytable" style="width:95%">
        <thead class="builder-table-head">
            <tr>
                <th>@Model.FormNumber</th>
                <th>@Model.FormName</th>
                <th>@Model.Occurences</th>
                <th>@Model.ClaimsMade</th>
                <th>@Model.EffectiveDate</th>
                <th>@Model.ExpirationDate</th>
                <th style="display: none"></th>
                <th></th>
            </tr>
        </thead>
    </table>
}

<script>

    var table;
    $('.btn-load-form').on('click', function () {
        var IssueCompany = $('#formissue :selected').text();
        var State = $('#formstate :selected').text();
        var formDate = $('.formdate').val();
        var formType = $('.filterformstype :selected').text();
        var apiQueryString = "?issueCompany=" + IssueCompany + "&state=" + State + "&effectiveDate=" + formDate + "&formType=" + formType;

        var loadFormSearchModel = {
            issueCompany: IssueCompany,
            state: State,
            formDate: formDate,
            formType: formType,
            apiQueryString: apiQueryString
        }

        $.ajax({
            type: "POST",
            url: "/manualformsapi/getloadforms",
            dataType: "json",
            data: { SearchModel: loadFormSearchModel },
            success: OnSuccess,

            failure: function (response) {
                alert(response.d);
            },
            error: function (response) {
                alert(response.d);
            }
        });
    });

    function OnSuccess(json) {

        var data = json.forms.map(data => {
            console.log(data);
            if (data.coverageTrigger == 'ALL') {
                return [data.formNumber, data.formName, true, true, data.effectiveDate, data.expirationDate, "ALL Occurrence Claims Made"];
            }
            if (data.coverageTrigger == 'Occurrence') {
                return [data.formNumber, data.formName, true, false, data.effectiveDate, data.expirationDate, data.coverageTrigger];
            }
            if (data.coverageTrigger == 'Claims Made') {
                return [data.formNumber, data.formName, false, true, data.effectiveDate, data.expirationDate, data.coverageTrigger];
            }
        });


        $('#loadtable').dataTable().fnDestroy();
        table = $('#loadtable').DataTable({
            data: data,
            ordering: false,
            sDom: '<"top">rt<"bottom"lp><"clear">',
            responsive: true,
            pageLength: 10,
            lengthMenu: [10, 25, 50, 75, 100],
            pagingType: "input",
            bFilter: "true",
            bRetrieve: true,
            language: {
                lengthMenu: "Results per Page _MENU_",
                "info": "_START_ of _TOTAL_",
                "paginate": {
                    "first": "<i class='bi bi-skip-start-fill goto-first-last' style='color: white'></i>",
                    "last": "<i class='bi bi-skip-end-fill goto-first-last' style='color: white'></i>",
                    "next": "<i class='bi bi-caret-right-fill left-right' style='color: white'></i>",
                    "previous": "<i class='bi bi-caret-left-fill left-right' style='color: white'></i>"
                }
            },
            columnDefs: [
                { "width": "15%", "targets": 0 },
                { "width": "45%", "targets": 1 },
                {
                    "width": "10%",
                    "targets": 2,
                    "render": function (data, type, full, meta) {
                        return data ? '<input type="checkbox" value=' + data + ' disabled checked/>' : '<input type="checkbox" disabled/>'
                    }
                },
                {
                    "width": "10%",
                    "targets": 3,
                    "render": function (data, type, full, meta) {
                        return data ? '<input type="checkbox" value=' + data + ' disabled checked/>' : '<input type="checkbox" disabled/>'
                    }
                },
                { "width": "10%", "targets": 4 },
                { "width": "10%", "targets": 5 },
                { "width": "0%", "targets": 6, "searchable": true, "visible": false },
                {
                    data: null,
                    defaultContent: '<i class="bi bi-plus-circle-fill" style="color:#002f6b; font-size:medium;"></i>',
                    targets: 7
                }
            ],
            initcomplete: function () {
                tabulate(this.api().page.info());
            },

            "success": fnsuccesscallback,
            "error": fnerrorcallback
        });

        $('.search-form').on('change', function () {
            var textSelected = $('#assetassettype option:selected').text();
            var searchFormNum = $('.search-form').val();
            var searchName = $('.search-name').val();

            if (textSelected != "ALL") {
                table.column(0).search(searchFormNum).column(1).search(searchName).columns(6).search('').draw();
            }
            else {
                table.column(0).search(searchFormNum).column(1).search(searchName).columns(6).search('').draw();
            }
        });

        $('.search-name').on('change', function () {
            var textSelected = $('#assetassettype option:selected').text();
            var searchFormNum = $('.search-form').val();
            var searchName = $('.search-name').val();

            if (textSelected != "ALL") {
                table.column(0).search(searchFormNum).column(1).search(searchName).columns(6).search('').draw();
            }
            else {
                table.column(0).search(searchFormNum).column(1).search(searchName).columns(6).search('').draw();
            }
        });

        $('#assetassettype').on('change', function () {
            var textSelected = $('#assetassettype option:selected').text();
            var searchFormNum = $('.search-form').val();
            var searchName = $('.search-name').val();

           


            if (textSelected != "ALL") {
                table.column(0).search(searchFormNum).column(1).search(searchName).columns(6).search(textSelected).draw();
            }
            else {
                table.column(0).search(searchFormNum).column(1).search(searchName).columns(6).search('').draw();
            }
        });


        $('.clear-filter').on('click', function () {
            $('.search-clear').val('');
            $('#assetassettype').val('ALL');
            table.search('').columns().search('').draw();
        });

        table.on('draw', function () {
            tabulate(table.page.info());
        });

        function fnsuccesscallback(data) {
            alert(data.d);
        }
        function fnerrorcallback(result) {
            alert("error");
        }

        var tbody = $('#loadtable').find('tbody');
        tbody.addClass("form-tablebody");
    }

    function tabulate(pageInfo) {
        var curr = pageInfo.page + 1;
        var tot = pageInfo.pages;
        $("<span>Page " + curr + " of " + tot + "</span>").insertAfter("a.paginate_button.previous");
        $('.paginate_of').text(" of " + tot);
        $('#loadtable_paginate').css("display", "block");
    }

    $('.mybundle, .search, .mytable').hide();

    $('.btn-load-form').click(function () {
        $('.mybundle, .search, .mytable').show();
        $('#' + this.innerHTML).show().siblings().hide();
    });

    $('.btn-load-form').attr('disabled', 'disabled');

    $('.formdate').change(function () {
        $('.btn-load-form').removeAttr('disabled');
    });
</script>

